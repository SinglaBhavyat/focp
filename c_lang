#include <stdio.h>
#include <math.h>

int main() {
    int num, sum = 0, temp, remainder, n = 0;

    printf("Enter an no.");
    scanf("%d", &num);

    temp = num;
  
    while (temp != 0) {
        temp /= 10;
        ++n;
    }

    temp = num;
    while (temp != 0) {
        remainder = temp % 10;
        sum += pow(remainder, n);
        temp /= 10;
    }

    if (sum == num)
        printf("%d is an Armstrong number.\n", num);
    else
        printf("%d is not an Armstrong number.\n", num);

    return 0;
}

#include <stdio.h>

int main() {
    int num1, num2, i, hcf;

    printf("Enter two no: ");
    scanf("%d %d", &num1, &num2);
    for (i = 1; i <= num1 && i <= num2; i++) {
        if (num1 % i == 0 && num2 % i == 0) {
            hcf = i;  
        }
    }
    printf("The HCF of %d and %d is %d\n", num1, num2, hcf);

    return 0;
}

#include <stdio.h>
int subtract(int a, int b) {
    while (b > 0) {
        a++; 
        b--;  
    }
    while (b < 0) {
        a--;  
        b++; 
    }

    return a;  
}

int main() {
    int a, b;
    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);
    printf("The result of %d - %d is: %d\n", a, b, subtract(a, b));
    return 0;
}
#include <stdio.h>

int main() {
    int num, sum = 0;

    printf("Enter a number: ");
    scanf("%d", &num);
    for (int i = 1; i <= num / 2; i++) {
        if (num % i == 0) {
            sum += i;
        }
    }
    if (sum == num)
        printf("%d is a Perfect Number.\n", num);
    else
        printf("%d is not a Perfect Number.\n", num);

    return 0;
}

#include <stdio.h>

int main() {
    int x, y;

    printf("Enter coordinates (x, y): ");
    scanf("%d %d", &x, &y);

    if (x > 0 && y > 0)
        printf("The coordinate point (%d, %d) lies in the First quadrant.\n", x, y);
    else if (x < 0 && y > 0)
        printf("The coordinate point (%d, %d) lies in the Second quadrant.\n", x, y);
    else if (x < 0 && y < 0)
        printf("The coordinate point (%d, %d) lies in the Third quadrant.\n", x, y);
    else if (x > 0 && y < 0)
        printf("The coordinate point (%d, %d) lies in the Fourth quadrant.\n", x, y);
    else if (x == 0 && y != 0)
        printf("The coordinate point (%d, %d) lies on the Y-axis.\n", x, y);
    else if (x != 0 && y == 0)
        printf("The coordinate point (%d, %d) lies on the X-axis.\n", x, y);
    else
        printf("The coordinate point (%d, %d) is at the origin.\n", x, y);

    return 0;
}
#include <stdio.h>

void decimal_to_binary(int n) {
    if (n > 1)
        decimal_to_binary(n / 2);
    printf("%d", n % 2);
}

int binary_to_decimal(int n) {
    int decimal = 0, base = 1;
    while (n > 0) {
        decimal += (n % 10) * base;
        n /= 10;
        base *= 2;
    }
    return decimal;
}

int main() {
    int choice, num;

    printf("Enter 1 for Decimal to Binary or 2 for Binary to Decimal: ");
    scanf("%d", &choice);

    if (choice == 1) {
        printf("Enter a decimal number: ");
        scanf("%d", &num);
        printf("Binary of %d is: ", num);
        decimal_to_binary(num);
        printf("\n");
    } else if (choice == 2) {
        printf("Enter a binary number: ");
        scanf("%d", &num);
        printf("Decimal of %d is: %d\n", num, binary_to_decimal(num));
    } else {
        printf("Invalid choice\n");
    }

    return 0;
}

#include <stdio.h>

int main() {
    int i, j, n = 5;
    
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= i; j++) {
            if ((i + j) % 2 == 0)
                printf("1");
            else
                printf("0");
        }
        printf("\n");
    }
    return 0;
}
#include <stdio.h>
void swap_using_temp(int a, int b) {
    int temp = a;
    a = b;
    b = temp;
    printf("After swap (using temp variable): a = %d, b = %d\n", a, b);
}
void swap_using_arithmetic(int a, int b) {
    a = a + b; 
    b = a - b;  
    a = a - b;   
    printf("After swap (using arithmetic): a = %d, b = %d\n", a, b);
}

void swap_using_xor(int a, int b) {
    a = a ^ b;  
    b = a ^ b;   
    a = a ^ b;   
    printf("After swap (using XOR): a = %d, b = %d\n", a, b);
}

// Method 4: Using pointers (corrected)
void swap_using_pointers(int *x, int *y) {
    int temp = *x; 
    *x = *y;       
    *y = temp;     
}

int main() {
    int a, b;
    printf("Enter two integers: ");
    scanf("%d %d", &a, &b);

    printf("Original values: a = %d, b = %d\n", a, b);

    swap_using_temp(a, b);

    swap_using_arithmetic(a, b);

    swap_using_xor(a, b);

    swap_using_pointers(&a, &b);
    printf("After swap (using pointers): a = %d, b = %d\n", a, b);

    return 0;
}
#include <stdio.h>
void printPascalTriangle(int rows) {
    for (int i = 0; i < rows; i++) {
        // Print spaces for formatting the triangle
        for (int j = 0; j < rows - i - 1; j++) {
            printf(" ");
        }

      
        int value = 1;
        for (int j = 0; j <= i; j++) {
            printf("%d ", value);
            value = value * (i - j) / (j + 1);  
        }

        printf("\n");
    }
}

int main() {
    int rows;

    printf("Enter the number of rows for Pascal's Triangle: ");
    scanf("%d", &rows);

    printPascalTriangle(rows);

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {65, 80, 90, 70, 85};
    int size = sizeof(marks) / sizeof(marks[0]);

    for (int i = 0; i < size; i++) {
        marks[i] += 5;
    }

    for (int i = 0; i < size; i++) {
        printf("%d ", marks[i]);
    }

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {80, 70, 90, 60, 35};
    int size = sizeof(marks) / sizeof(marks[0]);

    for (int i = 0; i < size; i++) {
        if (marks[i] >= 75) printf("A\n");
        else if (marks[i] >= 60) printf("B\n");
        else if (marks[i] >= 40) printf("C\n");
        else printf("D\n");
    }

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {80, 99, 90, 99, 85};
    int size = sizeof(marks) / sizeof(marks[0]);

    for (int i = 0; i < size; i++) {
        if (marks[i] == 99) {
            printf("First 99 at position %d\n", i + 1);
            break;
        }
    }

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {99, 80, 99, 90, 99};
    int size = sizeof(marks) / sizeof(marks[0]);
    int count = 0;

    for (int i = 0; i < size; i++) {
        if (marks[i] == 99) {
            printf("Student %d ", i + 1);
            count++;
        }
    }

    printf("\nTotal: %d\n", count);

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {65, 80, 90, 70, 85};
    int size = sizeof(marks) / sizeof(marks[0]);
    int sum = 0;

    for (int i = 0; i < size; i++) {
        sum += marks[i];
    }

    printf("%d\n", sum);

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {65, 80, 90, 70, 85};
    int size = sizeof(marks) / sizeof(marks[0]);
    int sum = 0;

    for (int i = 0; i < size; i++) {
        sum += marks[i];
    }

    printf("%.2f\n", (float)sum / size);

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {65, 80, 90, 71, 85};
    int size = sizeof(marks) / sizeof(marks[0]);

    for (int i = 0; i < size; i++) {
        if (marks[i] % 2 == 0) printf("Even\n");
        else printf("Odd\n");
    }

    return 0;
}
#include <stdio.h>

int main() {
    int marks[] = {65, 80, 90, 70, 85};
    int size = sizeof(marks) / sizeof(marks[0]);
    int max = marks[0], min = marks[0];

    for (int i = 1; i < size; i++) {
        if (marks[i] > max) 
max = marks[i];
        if (marks[i] < min) 
min = marks[i];
    }

    printf("%d %d\n", max, min);

    return 0;
}
#include <stdio.h>

int isPrime(int n) {
    if (n <= 1) 
return 0;
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) 
return 0;
    }
    return 1;
}

int main() {
    int arr[] = {2, 3, 4, 5, 6, 7};
    int count = 0;
    
    for (int i = 0; i < 6; i++) {
        if (isPrime(arr[i])) 
count++;
    }
    
    printf("Prime count: %d\n", count);
    return 0;
}
#include <stdio.h>

int main() {
    int arr[10] = {10, 20, 30};
    int size = 3;
    int val, pos;

    // at front
    val = 5;
    for (int i = size; i > 0; i--) arr[i] = arr[i - 1];
    arr[0] = val;
    size++;

    // at position
    val = 25;
    pos = 2;
    for (int i = size; i > pos; i--) arr[i] = arr[i - 1];
    arr[pos] = val;
    size++;

    // at end
    val = 40;
    arr[size] = val;
    size++;

    // Print array 
    for (int i = 0; i < size; i++) printf("%d ", arr[i]);
    printf("\n");

    return 0;
}
#include <stdio.h>

int main() {
    int arr[] = {10, 20, 30, 40, 50};
    int size = 5;

    // from front
    for (int i = 0; i < size - 1; i++) arr[i] = arr[i + 1];
    size--;

    // from position
    int pos = 1;
    for (int i = pos; i < size - 1; i++) arr[i] = arr[i + 1];
    size--;

    // from end
    size--;

    // Print array 
    for (int i = 0; i < size; i++) printf("%d ", arr[i]);
    printf("\n");

    return 0;
}
#include <stdio.h>

int main() {
    int arr[] = {2, 10, 10, 100, 2, 10, 11, 2, 11, 2};
    int size = 10;
    int found;

    for (int i = 0; i < size; i++) {
        found = 0;
        for (int j = i + 1; j < size; j++) {
            if (arr[i] == arr[j]) {
                found = 1;
                break;
            }
        }
        if (found) printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
//two question missing one from assing 1 and 1 from 2
#include <stdio.h>
#include <math.h>

int main() {
    int choice;
    double num1, num2;

    printf("Simple Calculator\n");
    printf("1. Addition\n");
    printf("2. Subtraction\n");
    printf("3. Multiplication\n");
    printf("4. Division\n");
    printf("5. Logarithmic value\n");
    printf("6. Square root\n");
    printf("Enter your choice: ");
    scanf("%d", &choice);

    if(choice>=1 && choice<=4){
        printf("Enter two numbers: ");
        scanf("%lf %lf", &num1, &num2);

        if(choice==1){
            printf("Result: %.2lf\n", num1+num2);
        }
        else if(choice==2){
            printf("Result: %.2lf\n", num1-num2);
        }
        else if (choice==3){
            printf("Result: %.2lf\n", num1*num2);
        }
        else if(choice==4){
            if(num2!=0){
                printf("Result: %.2lf\n", num1/num2);
            } else {
                printf("Error: Division by zero!\n");
            }
        }
    }
    else if(choice==5){
        printf("Enter a number: ");
        scanf("%lf", &num1);
        if(num1>0){
            printf("Logarithmic value: %.2lf\n", log(num1));
        } else {
            printf("Logarithm is not defined for non-positive numbers.\n");
        }
    }
    else if(choice==6){
        printf("Enter a number: ");
        scanf("%lf", &num1);
        if(num1>=0){
            printf("Square root: %.2lf\n", sqrt(num1));
        } else {
            printf("Cannot compute square root of negative numbers.\n");
        }
    }
    else {
        printf("Invalid choice!\n");
    }

    return 0;
}
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int user_choice, computer_choice;
    
    srand(time(0));

    printf("Enter your choice (0=Rock, 1=Paper, 2=Scissors): ");
    scanf("%d", &user_choice);

    if(user_choice<0||user_choice>2){
        printf("Invalid choice! Please enter 0, 1, or 2.\n");
        return 1;
    }

    computer_choice=rand()%3;  

    if(user_choice == 0) printf("You chose: Rock\n");
    else if(user_choice==1) printf("You chose: Paper\n");
    else printf("You chose: Scissors\n");

    if(computer_choice==0) printf("Computer chose: Rock\n");
    else if(computer_choice == 1) printf("Computer chose: Paper\n");
    else printf("Computer chose: Scissors\n");

    if(user_choice == computer_choice){
        printf("It's a tie!\n");
    }else if((user_choice == 0 && computer_choice == 2) ||
               (user_choice == 1 && computer_choice == 0) ||
               (user_choice == 2 && computer_choice == 1)) {  
        printf("You win!\n");
    } else {
        printf("Computer wins!\n");
    }

    return 0;
}
#include <stdio.h>
#include <string.h>

int main() {
	int i;
    char word[] = "PROGRAM"; 
    int length = strlen(word);
    char guess;
    int chances = 3;
    int correctGuesses = 0;

    printf("Welcome to Hangman Game!\n");

    while (chances > 0 && correctGuesses < length){
        printf("\nGuess the word: ");
        
        for(i=0;i<length;i++){
            if(word[i]=='_'){
                printf("_ ");
            } else{
                printf("%c ", word[i]);
            }
        }

        printf("\nYou have %d chances left.\n", chances);
        printf("Enter your guess: ");
        scanf(" %c", &guess);

        int found=0;

        for(i=0;i<length;i++){
            if (word[i]==guess){
                word[i]='_';
                correctGuesses++;
                found=1;
            }
        }

        if(!found){
            chances--;
        }
    }

    if(correctGuesses==length){
        printf("\nCongratulations You've guessed the word!\n");
    } else{
        printf("\nGame over! The word was: PROGRAM\n");
    }

    return 0;
}
#include <stdio.h>

char board[3][3];
int i,j; 

void initializeBoard(){
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            board[i][j]=' ';
        }
    }
}

void printBoard(){
    printf("\n");
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            printf(" %c ", board[i][j]);
            if(j<2)printf("|");
        }
        printf("\n");
        if(i<2) printf("---|---|---\n");
    }
    printf("\n");
}

int checkWin(char player){
    for(i=0;i<3;i++){
        if(board[i][0]==player && board[i][1]==player && board[i][2]==player)
            return 1;
        if(board[0][i]==player && board[1][i]==player && board[2][i]==player)
            return 1;
    }
    if (board[0][0]==player && board[1][1]==player && board[2][2]==player)
        return 1;
    if (board[0][2]==player && board[1][1]==player && board[2][0]==player)
        return 1;
    return 0;
}

int isBoardFull(){
    for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            if(board[i][j]==' '){
                return 0;
            }
        }
    }
    return 1;
}

void playerMove(){
    int row,col;
    printf("Enter row and column (0-2) for X: ");
    scanf("%d %d", &row, &col);
    while (row < 0 || row > 2 || col < 0 || col > 2 || board[row][col] != ' ') {
        printf("Invalid move! Try again: ");
        scanf("%d %d", &row, &col);
    }
    board[row][col] = 'X';
}

void computerMove(){
    int row,col;
    do{
        row=rand()%3;
        col=rand()%3;
    } while(board[row][col] != ' ');
    board[row][col] = 'O';
}

int main(){
    int gameOver=0;
    initializeBoard();
    printBoard();

    while(!gameOver){
        printf("Computer's turn (O):\n");
        computerMove();
        printBoard();
        if(checkWin('O')){
            printf("Computer wins!\n");
            gameOver=1;
            break;
        }
        if(isBoardFull()){
            printf("It's a draw!\n");
            gameOver=1;
            break;
        }

        printf("Player's turn (X):\n");
        playerMove();
        printBoard();
        if(checkWin('X')){
            printf("Player wins!\n");
            gameOver=1;
            break;
        }
        if(isBoardFull()){
            printf("It's a draw!\n");
            gameOver=1;
            break;
        }
    }

    return 0;
}
